{"version":3,"sources":["webpack://extension-kitchensink/./src/components/Embed/EmbedLook.tsx","webpack://extension-kitchensink/./src/components/Embed/components/EmbedContainer/EmbedContainer.tsx","webpack://extension-kitchensink/./src/components/SandboxStatus/SandboxStatus.tsx"],"names":["id","running","setRunning","React","look","setLook","extensionContext","useContext","ExtensionContext2","updateRunButton","setupLook","embedCtrRef","useCallback","el","hostUrl","extensionSDK","lookerHostData","LookerEmbedSDK","appendTo","on","bind","build","connect","then","catch","error","console","Heading","mt","m","onClick","run","disabled","ref","EmbedContainer","styled","SandboxStatus","sandboxStatus","setSandboxStatus","useState","useEffect","window","parent","looker","version","err","Paragraph","my"],"mappings":"qPAuFA,QAnDyC,IAAW,IAAX,GAAEA,GAAS,GAC3CC,EAASC,GAAcC,YAAe,IACtCC,EAAMC,GAAWF,aAClBG,GAAmBC,gBACvBC,qBAGIC,EAAmBR,IACvBC,EAAWD,IAGPS,EAAaN,IACjBC,EAAQD,IAGJO,GAAcC,kBAAaC,IAAO,QAChCC,EAAUR,SAAH,UAAGA,EAAkBS,oBAArB,iBAAG,EAAgCC,sBAAnC,aAAG,EAAgDF,QAC5DD,GAAMC,IACRG,sBAAoBH,GACpBG,kCAAgCjB,GAC7BkB,SAASL,GACTM,GAAG,cAAeV,EAAgBW,KAAK,MAAM,IAC7CD,GAAG,iBAAkBV,EAAgBW,KAAK,MAAM,IAChDD,GAAG,oBAAqBV,EAAgBW,KAAK,MAAM,IACnDC,QACAC,UACAC,KAAKb,GACLc,OAAOC,IACNC,QAAQD,MAAM,mBAAoBA,SAGvC,IAQH,OACE,gCACE,gBAAC,EAAAE,QAAD,CAASC,GAAG,UAAZ,iBACA,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAQC,EAAE,SAASC,QAVP,KACV1B,GACFA,EAAK2B,OAQgCC,SAAU/B,GAA/C,YAGA,gBAAC,IAAD,CAAgBgC,IAAKtB,O,kDCxDduB,E,SAAiBC,kBAAH,0DAAGA,CAAH,iE,wECEdC,EAA8C,KACzD,IAAOC,EAAeC,IAAoBC,cAAS,IAgBnD,OAdAC,gBAAU,KACR,IAAI,MAMF,UAL2BC,OAAeC,OAK7BC,cAAb,SAAqBC,QACrBN,EAAiB,OACjB,MAAOO,GACPP,EAAiB,OAElB,IAGD,gBAAC,EAAAQ,UAAD,CAAWC,GAAG,UAAd,qBACoB,yBAAIV,GADxB","file":"embed_look.bundle.js","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2021 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport React, { useCallback, useContext } from 'react'\nimport { LookerEmbedSDK, LookerEmbedLook } from '@looker/embed-sdk'\nimport { Looker40SDK } from '@looker/sdk'\nimport {\n  ExtensionContext2,\n  ExtensionContextData2,\n} from '@looker/extension-sdk-react'\nimport { Button, Heading } from '@looker/components'\nimport { SandboxStatus } from '../SandboxStatus'\nimport { EmbedContainer } from './components/EmbedContainer'\nimport { EmbedProps } from './types'\n\nconst EmbedLook: React.FC<EmbedProps> = ({ id }) => {\n  const [running, setRunning] = React.useState(true)\n  const [look, setLook] = React.useState<LookerEmbedLook>()\n  const extensionContext = useContext<ExtensionContextData2<Looker40SDK>>(\n    ExtensionContext2\n  )\n\n  const updateRunButton = (running: boolean) => {\n    setRunning(running)\n  }\n\n  const setupLook = (look: LookerEmbedLook) => {\n    setLook(look)\n  }\n\n  const embedCtrRef = useCallback((el) => {\n    const hostUrl = extensionContext?.extensionSDK?.lookerHostData?.hostUrl\n    if (el && hostUrl) {\n      LookerEmbedSDK.init(hostUrl)\n      LookerEmbedSDK.createLookWithId(id as number)\n        .appendTo(el)\n        .on('look:loaded', updateRunButton.bind(null, false))\n        .on('look:run:start', updateRunButton.bind(null, true))\n        .on('look:run:complete', updateRunButton.bind(null, false))\n        .build()\n        .connect()\n        .then(setupLook)\n        .catch((error: Error) => {\n          console.error('Connection error', error)\n        })\n    }\n  }, [])\n\n  const runLook = () => {\n    if (look) {\n      look.run()\n    }\n  }\n\n  return (\n    <>\n      <Heading mt=\"xlarge\">Embedded Look</Heading>\n      <SandboxStatus />\n      <Button m=\"medium\" onClick={runLook} disabled={running}>\n        Run Look\n      </Button>\n      <EmbedContainer ref={embedCtrRef} />\n    </>\n  )\n}\n\nexport default EmbedLook\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2021 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport styled from 'styled-components'\n\nexport const EmbedContainer = styled.div`\n  width: 100%;\n  height: 95vh;\n  & > iframe {\n    width: 100%;\n    height: 100%;\n  }\n`\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2021 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport React, { useEffect, useState } from 'react'\nimport { Paragraph } from '@looker/components'\nimport { SandboxStatusProps } from './types'\n\nexport const SandboxStatus: React.FC<SandboxStatusProps> = () => {\n  const [sandboxStatus, setSandboxStatus] = useState('')\n\n  useEffect(() => {\n    try {\n      const parentWindow: any = (window as any).parent\n      // Attempt to get data from the parent window. This\n      // will fail in a sandboxed environment and in most\n      // cases we want this to fail.\n      // eslint-disable-next-line no-unused-expressions\n      parentWindow.looker?.version\n      setSandboxStatus('NOT')\n    } catch (err) {\n      setSandboxStatus('')\n    }\n  }, [])\n\n  return (\n    <Paragraph my=\"medium\">\n      This extension is <b>{sandboxStatus}</b> sandboxed.\n    </Paragraph>\n  )\n}\n"],"sourceRoot":""}